---
const currentPath = Astro.url.pathname;
const segments = currentPath.split('/').filter(segment => segment !== '');

const breadcrumbs = [
  { name: 'Strona Główna', path: '/' },
  ...segments.map((segment, index) => {
    const path = `/${segments.slice(0, index + 1).join('/')}`;
    const name = segment
      .split('-')
      .map(word => word.charAt(0).toUpperCase() + word.slice(1))
      .join(' ');
    return { name, path };
  }),
];
---

<section
  class="relative z-10 overflow-hidden pb-[60px] pt-[120px] dark:bg-dark md:pt-[130px] lg:pt-[160px]">
  <div
    class="absolute bottom-0 left-0 h-px w-full bg-gradient-to-r from-stroke/0 via-stroke to-stroke/0 dark:via-dark-3">
  </div>
  <div class="container">
    <div class="-mx-4 flex flex-wrap items-center">
      <div class="w-full px-4">
        <div class="text-center">
          <h1
            class="mb-4 text-3xl font-bold text-dark dark:text-white sm:text-4xl md:text-[40px] md:leading-[1.2]">
            <slot name="title">Title</slot>
          </h1>

          <ul class="flex items-center justify-center gap-[10px]">
            {
              breadcrumbs.map((crumb, index) => (
                <li class="flex items-center gap-[10px]">
                  {index > 0 && <span class="text-body-color dark:text-dark-6">/</span>}
                  {index === breadcrumbs.length - 1 ? (
                    <span class="text-base font-medium text-body-color dark:text-dark-6">
                      {crumb.name}
                    </span>
                  ) : (
                    <a
                      href={crumb.path}
                      class="text-base font-medium text-dark hover:text-primary dark:text-white dark:hover:text-primary">
                      {crumb.name}
                    </a>
                  )}
                </li>
              ))
            }
          </ul>
        </div>
      </div>
    </div>
  </div>
</section>
